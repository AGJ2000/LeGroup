// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: gRPC/chitchat.proto

package chitchat

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Broadcast_Type int32

const (
	Broadcast_UNKNOWN Broadcast_Type = 0
	Broadcast_MESSAGE Broadcast_Type = 1
	Broadcast_JOIN    Broadcast_Type = 2
	Broadcast_LEAVE   Broadcast_Type = 3
)

// Enum value maps for Broadcast_Type.
var (
	Broadcast_Type_name = map[int32]string{
		0: "UNKNOWN",
		1: "MESSAGE",
		2: "JOIN",
		3: "LEAVE",
	}
	Broadcast_Type_value = map[string]int32{
		"UNKNOWN": 0,
		"MESSAGE": 1,
		"JOIN":    2,
		"LEAVE":   3,
	}
)

func (x Broadcast_Type) Enum() *Broadcast_Type {
	p := new(Broadcast_Type)
	*p = x
	return p
}

func (x Broadcast_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Broadcast_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_gRPC_chitchat_proto_enumTypes[0].Descriptor()
}

func (Broadcast_Type) Type() protoreflect.EnumType {
	return &file_gRPC_chitchat_proto_enumTypes[0]
}

func (x Broadcast_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Broadcast_Type.Descriptor instead.
func (Broadcast_Type) EnumDescriptor() ([]byte, []int) {
	return file_gRPC_chitchat_proto_rawDescGZIP(), []int{7, 0}
}

type JoinRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DesiredName   string                 `protobuf:"bytes,1,opt,name=desired_name,json=desiredName,proto3" json:"desired_name,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinRequest) Reset() {
	*x = JoinRequest{}
	mi := &file_gRPC_chitchat_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinRequest) ProtoMessage() {}

func (x *JoinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gRPC_chitchat_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinRequest.ProtoReflect.Descriptor instead.
func (*JoinRequest) Descriptor() ([]byte, []int) {
	return file_gRPC_chitchat_proto_rawDescGZIP(), []int{0}
}

func (x *JoinRequest) GetDesiredName() string {
	if x != nil {
		return x.DesiredName
	}
	return ""
}

type JoinAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ParticipantId string                 `protobuf:"bytes,1,opt,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
	EffectiveName string                 `protobuf:"bytes,2,opt,name=effective_name,json=effectiveName,proto3" json:"effective_name,omitempty"`
	LogicalTime   uint64                 `protobuf:"varint,3,opt,name=logical_time,json=logicalTime,proto3" json:"logical_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JoinAck) Reset() {
	*x = JoinAck{}
	mi := &file_gRPC_chitchat_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JoinAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JoinAck) ProtoMessage() {}

func (x *JoinAck) ProtoReflect() protoreflect.Message {
	mi := &file_gRPC_chitchat_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JoinAck.ProtoReflect.Descriptor instead.
func (*JoinAck) Descriptor() ([]byte, []int) {
	return file_gRPC_chitchat_proto_rawDescGZIP(), []int{1}
}

func (x *JoinAck) GetParticipantId() string {
	if x != nil {
		return x.ParticipantId
	}
	return ""
}

func (x *JoinAck) GetEffectiveName() string {
	if x != nil {
		return x.EffectiveName
	}
	return ""
}

func (x *JoinAck) GetLogicalTime() uint64 {
	if x != nil {
		return x.LogicalTime
	}
	return 0
}

type SubscribeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ParticipantId string                 `protobuf:"bytes,1,opt,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubscribeRequest) Reset() {
	*x = SubscribeRequest{}
	mi := &file_gRPC_chitchat_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubscribeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscribeRequest) ProtoMessage() {}

func (x *SubscribeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gRPC_chitchat_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscribeRequest.ProtoReflect.Descriptor instead.
func (*SubscribeRequest) Descriptor() ([]byte, []int) {
	return file_gRPC_chitchat_proto_rawDescGZIP(), []int{2}
}

func (x *SubscribeRequest) GetParticipantId() string {
	if x != nil {
		return x.ParticipantId
	}
	return ""
}

type PublishRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ParticipantId string                 `protobuf:"bytes,1,opt,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	ClientTime    uint64                 `protobuf:"varint,3,opt,name=client_time,json=clientTime,proto3" json:"client_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishRequest) Reset() {
	*x = PublishRequest{}
	mi := &file_gRPC_chitchat_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishRequest) ProtoMessage() {}

func (x *PublishRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gRPC_chitchat_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishRequest.ProtoReflect.Descriptor instead.
func (*PublishRequest) Descriptor() ([]byte, []int) {
	return file_gRPC_chitchat_proto_rawDescGZIP(), []int{3}
}

func (x *PublishRequest) GetParticipantId() string {
	if x != nil {
		return x.ParticipantId
	}
	return ""
}

func (x *PublishRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *PublishRequest) GetClientTime() uint64 {
	if x != nil {
		return x.ClientTime
	}
	return 0
}

type PublishAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LogicalTime   uint64                 `protobuf:"varint,1,opt,name=logical_time,json=logicalTime,proto3" json:"logical_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PublishAck) Reset() {
	*x = PublishAck{}
	mi := &file_gRPC_chitchat_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PublishAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublishAck) ProtoMessage() {}

func (x *PublishAck) ProtoReflect() protoreflect.Message {
	mi := &file_gRPC_chitchat_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublishAck.ProtoReflect.Descriptor instead.
func (*PublishAck) Descriptor() ([]byte, []int) {
	return file_gRPC_chitchat_proto_rawDescGZIP(), []int{4}
}

func (x *PublishAck) GetLogicalTime() uint64 {
	if x != nil {
		return x.LogicalTime
	}
	return 0
}

type LeaveRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ParticipantId string                 `protobuf:"bytes,1,opt,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveRequest) Reset() {
	*x = LeaveRequest{}
	mi := &file_gRPC_chitchat_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveRequest) ProtoMessage() {}

func (x *LeaveRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gRPC_chitchat_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveRequest.ProtoReflect.Descriptor instead.
func (*LeaveRequest) Descriptor() ([]byte, []int) {
	return file_gRPC_chitchat_proto_rawDescGZIP(), []int{5}
}

func (x *LeaveRequest) GetParticipantId() string {
	if x != nil {
		return x.ParticipantId
	}
	return ""
}

type LeaveAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LogicalTime   uint64                 `protobuf:"varint,1,opt,name=logical_time,json=logicalTime,proto3" json:"logical_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LeaveAck) Reset() {
	*x = LeaveAck{}
	mi := &file_gRPC_chitchat_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LeaveAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LeaveAck) ProtoMessage() {}

func (x *LeaveAck) ProtoReflect() protoreflect.Message {
	mi := &file_gRPC_chitchat_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LeaveAck.ProtoReflect.Descriptor instead.
func (*LeaveAck) Descriptor() ([]byte, []int) {
	return file_gRPC_chitchat_proto_rawDescGZIP(), []int{6}
}

func (x *LeaveAck) GetLogicalTime() uint64 {
	if x != nil {
		return x.LogicalTime
	}
	return 0
}

type Broadcast struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          Broadcast_Type         `protobuf:"varint,1,opt,name=type,proto3,enum=chitchat.Broadcast_Type" json:"type,omitempty"`
	ParticipantId string                 `protobuf:"bytes,2,opt,name=participant_id,json=participantId,proto3" json:"participant_id,omitempty"`
	Name          string                 `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	LogicalTime   uint64                 `protobuf:"varint,5,opt,name=logical_time,json=logicalTime,proto3" json:"logical_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Broadcast) Reset() {
	*x = Broadcast{}
	mi := &file_gRPC_chitchat_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Broadcast) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Broadcast) ProtoMessage() {}

func (x *Broadcast) ProtoReflect() protoreflect.Message {
	mi := &file_gRPC_chitchat_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Broadcast.ProtoReflect.Descriptor instead.
func (*Broadcast) Descriptor() ([]byte, []int) {
	return file_gRPC_chitchat_proto_rawDescGZIP(), []int{7}
}

func (x *Broadcast) GetType() Broadcast_Type {
	if x != nil {
		return x.Type
	}
	return Broadcast_UNKNOWN
}

func (x *Broadcast) GetParticipantId() string {
	if x != nil {
		return x.ParticipantId
	}
	return ""
}

func (x *Broadcast) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Broadcast) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Broadcast) GetLogicalTime() uint64 {
	if x != nil {
		return x.LogicalTime
	}
	return 0
}

var File_gRPC_chitchat_proto protoreflect.FileDescriptor

const file_gRPC_chitchat_proto_rawDesc = "" +
	"\n" +
	"\x13gRPC/chitchat.proto\x12\bchitchat\"0\n" +
	"\vJoinRequest\x12!\n" +
	"\fdesired_name\x18\x01 \x01(\tR\vdesiredName\"z\n" +
	"\aJoinAck\x12%\n" +
	"\x0eparticipant_id\x18\x01 \x01(\tR\rparticipantId\x12%\n" +
	"\x0eeffective_name\x18\x02 \x01(\tR\reffectiveName\x12!\n" +
	"\flogical_time\x18\x03 \x01(\x04R\vlogicalTime\"9\n" +
	"\x10SubscribeRequest\x12%\n" +
	"\x0eparticipant_id\x18\x01 \x01(\tR\rparticipantId\"r\n" +
	"\x0ePublishRequest\x12%\n" +
	"\x0eparticipant_id\x18\x01 \x01(\tR\rparticipantId\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\x12\x1f\n" +
	"\vclient_time\x18\x03 \x01(\x04R\n" +
	"clientTime\"/\n" +
	"\n" +
	"PublishAck\x12!\n" +
	"\flogical_time\x18\x01 \x01(\x04R\vlogicalTime\"5\n" +
	"\fLeaveRequest\x12%\n" +
	"\x0eparticipant_id\x18\x01 \x01(\tR\rparticipantId\"-\n" +
	"\bLeaveAck\x12!\n" +
	"\flogical_time\x18\x01 \x01(\x04R\vlogicalTime\"\xe8\x01\n" +
	"\tBroadcast\x12,\n" +
	"\x04type\x18\x01 \x01(\x0e2\x18.chitchat.Broadcast.TypeR\x04type\x12%\n" +
	"\x0eparticipant_id\x18\x02 \x01(\tR\rparticipantId\x12\x12\n" +
	"\x04name\x18\x03 \x01(\tR\x04name\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x12!\n" +
	"\flogical_time\x18\x05 \x01(\x04R\vlogicalTime\"5\n" +
	"\x04Type\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\v\n" +
	"\aMESSAGE\x10\x01\x12\b\n" +
	"\x04JOIN\x10\x02\x12\t\n" +
	"\x05LEAVE\x10\x032\xec\x01\n" +
	"\bChitChat\x120\n" +
	"\x04Join\x12\x15.chitchat.JoinRequest\x1a\x11.chitchat.JoinAck\x12>\n" +
	"\tSubscribe\x12\x1a.chitchat.SubscribeRequest\x1a\x13.chitchat.Broadcast0\x01\x129\n" +
	"\aPublish\x12\x18.chitchat.PublishRequest\x1a\x14.chitchat.PublishAck\x123\n" +
	"\x05Leave\x12\x16.chitchat.LeaveRequest\x1a\x12.chitchat.LeaveAckB3Z1github.com/andersgrangaard/ChitChat/gRPC;chitchatb\x06proto3"

var (
	file_gRPC_chitchat_proto_rawDescOnce sync.Once
	file_gRPC_chitchat_proto_rawDescData []byte
)

func file_gRPC_chitchat_proto_rawDescGZIP() []byte {
	file_gRPC_chitchat_proto_rawDescOnce.Do(func() {
		file_gRPC_chitchat_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_gRPC_chitchat_proto_rawDesc), len(file_gRPC_chitchat_proto_rawDesc)))
	})
	return file_gRPC_chitchat_proto_rawDescData
}

var file_gRPC_chitchat_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_gRPC_chitchat_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_gRPC_chitchat_proto_goTypes = []any{
	(Broadcast_Type)(0),      // 0: chitchat.Broadcast.Type
	(*JoinRequest)(nil),      // 1: chitchat.JoinRequest
	(*JoinAck)(nil),          // 2: chitchat.JoinAck
	(*SubscribeRequest)(nil), // 3: chitchat.SubscribeRequest
	(*PublishRequest)(nil),   // 4: chitchat.PublishRequest
	(*PublishAck)(nil),       // 5: chitchat.PublishAck
	(*LeaveRequest)(nil),     // 6: chitchat.LeaveRequest
	(*LeaveAck)(nil),         // 7: chitchat.LeaveAck
	(*Broadcast)(nil),        // 8: chitchat.Broadcast
}
var file_gRPC_chitchat_proto_depIdxs = []int32{
	0, // 0: chitchat.Broadcast.type:type_name -> chitchat.Broadcast.Type
	1, // 1: chitchat.ChitChat.Join:input_type -> chitchat.JoinRequest
	3, // 2: chitchat.ChitChat.Subscribe:input_type -> chitchat.SubscribeRequest
	4, // 3: chitchat.ChitChat.Publish:input_type -> chitchat.PublishRequest
	6, // 4: chitchat.ChitChat.Leave:input_type -> chitchat.LeaveRequest
	2, // 5: chitchat.ChitChat.Join:output_type -> chitchat.JoinAck
	8, // 6: chitchat.ChitChat.Subscribe:output_type -> chitchat.Broadcast
	5, // 7: chitchat.ChitChat.Publish:output_type -> chitchat.PublishAck
	7, // 8: chitchat.ChitChat.Leave:output_type -> chitchat.LeaveAck
	5, // [5:9] is the sub-list for method output_type
	1, // [1:5] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_gRPC_chitchat_proto_init() }
func file_gRPC_chitchat_proto_init() {
	if File_gRPC_chitchat_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_gRPC_chitchat_proto_rawDesc), len(file_gRPC_chitchat_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_gRPC_chitchat_proto_goTypes,
		DependencyIndexes: file_gRPC_chitchat_proto_depIdxs,
		EnumInfos:         file_gRPC_chitchat_proto_enumTypes,
		MessageInfos:      file_gRPC_chitchat_proto_msgTypes,
	}.Build()
	File_gRPC_chitchat_proto = out.File
	file_gRPC_chitchat_proto_goTypes = nil
	file_gRPC_chitchat_proto_depIdxs = nil
}
